steps:  
  - name: "bhgedigital/envsubst"
    entrypoint: /bin/sh
    args:
      - '-c'
      - |
        /usr/bin/envsubst < .env.production.tmp > .env.production
        /usr/bin/envsubst < infra/deployment.tmp.yaml > infra/deployment.yaml
        /usr/bin/envsubst < infra/service.tmp.yaml > infra/service.yaml
    env:
    - 'BRANCH_NAME=$BRANCH_NAME'
    - 'REDIS_HOST=35.184.7.255'

  # Verify
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: /bin/sh
    args:
      - '-c'
      - |
        cat .env.production
        cat infra/deployment.yaml
        cat infra/service.yaml
 
    # Install
  - name: "node"
    entrypoint: npm
    args: ["install"]

    # Test
  - name: "node"
    entrypoint: npm
    args: ["test"]

  - name: "bhgedigital/envsubst"
    entrypoint: /bin/sh
    args:
      - '-c'
      - |
        /usr/bin/envsubst < .env.production.tmp > .env.production
    env:
    - 'REDIS_HOST=localhost'

  # docker build and push
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: /bin/sh
    args:
      - '-c'
      - |
        docker build -t gcr.io/fis-us/messenger-$BRANCH_NAME:$SHORT_SHA .
        docker push gcr.io/fis-us/messenger-$BRANCH_NAME:$SHORT_SHA

  # kubectl apply
  - name: 'gcr.io/cloud-builders/kubectl'
    entrypoint: /bin/sh
    args:
      - '-c'
      - |
        gcloud container clusters get-credentials cluster-1 --zone europe-west1-b --project fis-us
        kubectl apply -f infra/deployment.yaml
        kubectl apply -f infra/service.yaml
    env:
      - CLOUDSDK_COMPUTE_ZONE=europe-west1-b
      - CLOUDSDK_CONTAINER_CLUSTER=cluster-1

  # kubectl rollout status
  - name: 'gcr.io/cloud-builders/kubectl'
    entrypoint: /bin/sh
    args:
      - '-c'
      - |
        gcloud container clusters get-credentials cluster-1 --zone europe-west1-b --project fis-us
        kubectl rollout status deployment.apps/messenger-$BRANCH_NAME -n app
    env:
      - CLOUDSDK_COMPUTE_ZONE=europe-west1-b
      - CLOUDSDK_CONTAINER_CLUSTER=cluster-1

timeout: 600s